@tailwind base;
@tailwind components;
@tailwind utilities;

/**
 * Any CSS included here will be global. The classic template
 * bundles Infima by default. Infima is a CSS framework designed to
 * work well for content-centric websites.
 */

/* You can override the default Infima variables here. */
:root {
  --ifm-color-primary: #000000;
  --ifm-color-primary-dark: #29784c;
  --ifm-color-primary-darker: #277148;
  --ifm-color-primary-darkest: #205d3b;
  --ifm-color-primary-light: #33925d;
  --ifm-color-primary-lighter: #359962;
  --ifm-color-primary-lightest: #3cad6e;
  --ifm-code-font-size: 95%;
  --docusaurus-highlighted-code-line-bg: rgba(209, 209, 209, 0.1);
}

/* For readability concerns, you should choose a lighter palette in dark mode. */
[data-theme='dark'] {
  --ifm-color-primary: #ffffff;
  --ifm-color-primary-dark: #21af90;
  --ifm-color-primary-darker: #1fa588;
  --ifm-color-primary-darkest: #1a8870;
  --ifm-color-primary-light: #29d5b0;
  --ifm-color-primary-lighter: #32d8b4;
  --ifm-color-primary-lightest: #4fddbf;
  --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);
}

*{
  box-sizing: border-box;
}

.card-body{
  height: 200px;
}


.card-text{
  display: -webkit-box ; 
  -webkit-box-orient: vertical;
  overflow: hidden;
  -webkit-line-clamp:2;
  text-overflow: ellipsis;
  
}

.tooltip::after{
  display: none;
}

.float{
  float: left;
}

/* .container {
  max-width: 1296px;
  margin: auto;
} */

.btn-switch{
  padding: 4px 8px 4px 8px ;
  margin-right: 8px;
}


.drawer {
  position: relative;
  display: grid;
  grid-auto-columns: max-content auto;
  width: 100%;
}

.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: 0px;
}

.drawer-side {
  pointer-events: none;
  position: fixed;
  inset-inline-start: 0px;
  top: 0px;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0px, 1fr));
  grid-template-rows: repeat(1, minmax(0px, 1fr));
  place-items: flex-start start;
  overflow: hidden;
  overscroll-behavior: contain;
  height: 100dvh;
}

.drawer-side > .drawer-overlay {
  position: sticky;
  top: 0px;
  place-self: stretch;
  cursor: pointer;
  background-color: transparent;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
}

.drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.drawer-side > :not(.drawer-overlay) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 300ms;
  will-change: transform;
  transform: translateX(-100%);
}

[dir="rtl"] .drawer-side > :not(.drawer-overlay) {
  transform: translateX(100%);
}

.drawer-toggle {
  position: fixed;
  height: 0px;
  width: 0px;
  appearance: none;
  opacity: 0;
}

.drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
}

.drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
  transform: translateX(0%);
}

.drawer-end {
  grid-auto-columns: auto max-content;
}

.drawer-end .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}

.drawer-end .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}

.drawer-end .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
  transform: translateX(100%);
}

[dir="rtl"] .drawer-end .drawer-toggle ~ .drawer-side > :not(.drawer-overlay) {
  transform: translateX(-100%);
}

.drawer-end .drawer-toggle:checked ~ .drawer-side > :not(.drawer-overlay) {
  transform: translateX(0%);
}